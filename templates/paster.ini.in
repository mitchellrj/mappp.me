[app:mappp.me]
use = egg:mappp.me
reload_templates = ${buildout:debug}
debug_authorization = false
debug_notfound = false
debug_routematch = false
debug_templates = false
default_locale_name = en
mako.directories = mappp.me:templates

mappp.me.platform = filesystem
mappp.me.storage.location = ${storage-directory:paths}
mappp.me.storage.expires = 1800
mappp.me.storage.gc_frequency = 300
mappp.me.gmaps.api_key = ABQIAAAA_p6HAqTpVcWmgmWZvyWn4xTULY8PP-YFqTbT7yrRa97ORgL6kBSGxE_PgiVft_WMoxECKWJfqvDzKw
mappp.me.google.js_api_key = ABQIAAAA_p6HAqTpVcWmgmWZvyWn4xTULY8PP-YFqTbT7yrRa97ORgL6kBSGxE_PgiVft_WMoxECKWJfqvDzKw

[filter:weberror]
use = egg:WebError#error_catcher
debug = false
;error_log =
;show_exceptions_in_wsgi_errors = true
;smtp_server = localhost
;error_email = janitor@example.com
;smtp_username = janitor
;smtp_password = "janitor's password"
;from_address = paste@localhost
;error_subject_prefix = "Pyramid Error"
;smtp_use_tls =
;error_message =

[filter:tm]
use = egg:repoze.tm2#tm
commit_veto = repoze.tm:default_commit_veto

[pipeline:main]
pipeline =
    weberror
    tm
    mappp.me

[server:main]
use = egg:Paste#http
host = ${pyramid:host}
port = ${pyramid:port}

# Begin logging configuration

[loggers]
keys = root

[handlers]
keys = console

[formatters]
keys = generic,csv

[logger_root]
level = WARN
handlers = console

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[formatter_csv]
format = "%(asctime)s","%(levelname)s","%(name)s",%(message)s

# End logging configuration
